File ::= Decl*

Decl ::= FnDecl | FieldDecl

Comma(T) ::= (T ",")* T?

FnDecl ::= "pub"? "fn" Name "(" Comma(Param) ")" Expr Block

FieldDecl ::= Name ":" Expr ","

Param ::= "comptime"? Name ":" Expr

Block ::= "{" Stmt* Expr "}"

Stmt ::= Let

Let ::= "let" Name (":" Expr)? "=" Expr ";"

Term ::=
  "if" Expr "{" Expr "}" "else" "{" Expr "}"
| Term "(" Comma(Expr) ")"
| "@" Name "(" Comma(Expr) ")"
| "comptime" Expr
| Int
| Bool
| Struct
| Term ConstructorBlock
| Name
| Term "." Name
| Block

Prod ::=
    Term
  | Prod "*" Term

Sum ::=
    Prod
  | Sum "+" Prod
  | Sum "-" Prod

Expr ::=
    Sum
  | Expr "==" Sum

Name ::= ALPHA (ALPHA | DIGIT | "_")*
Int ::= DIGIT+
Bool ::= "true" | "false"

Struct ::= "struct" "{" Decl* "}"

ConstructorBlock ::= "{" Comma(ConstructorField) "}"

ConstructorField ::= Name ":" Expr
