fn main() -> i32 {
    let x = IntAndBool.new(1, true);
    let t = IntAndBool.transpose(x);
    t.right
}

comptime IntAndBool: type = Pair(i32, bool);

pub fn Pair(comptime Left: type, comptime Right: type) -> type {
    struct {
        left: Left,
        right: Right,

        pub fn new(left: Left, right: Right) -> Self {
            Self { left: left, right: right }
        }

        fn transpose(self: Self) -> Pair(Right, Left) {
            Pair(Right, Left).new(self.right, self.left)
        }
    }
}
